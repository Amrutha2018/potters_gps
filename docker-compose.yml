version: '3.8'

services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - microservices-network

  gas_ping_api:
    build:
      context: ./microservices
      dockerfile: gas_ping_api/Dockerfile
    volumes:
      - ./microservices/shared_lib:/app/shared_lib
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - RABBITMQ_URL=${RABBITMQ_URL}
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - microservices-network
    ports:
      - "8002:8002" 

  user_track_api:
    build:
      context: ./microservices
      dockerfile: user_track_api/Dockerfile
    volumes:
      - ./microservices/shared_lib:/app/shared_lib
    environment:
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - postgres
    networks:
      - microservices-network
    ports:
      - "8001:8001" 

  worker_service:
    build:
      context: ./microservices
      dockerfile: worker_service/Dockerfile
    volumes:
      - ./microservices/shared_lib:/app/shared_lib
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - RABBITMQ_URL=${RABBITMQ_URL}
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - microservices-network
    ports:
      - "8000:8000" 

volumes:
  postgres_data:

networks:
  microservices-network:
    driver: bridge
